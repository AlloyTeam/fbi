{"version":3,"sources":["../../src/lib/serve.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAM,MAAM,mBAAZ;AACA,IAAI,gBAAgB,KAApB;;AAEA,SAAS,MAAT,CAAgB,GAAhB,EAAqB,IAArB,EAA2B;AACzB,SAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAM,SAAS,eAAK,YAAL,CAAkB,IAAI,QAAJ,EAAlB,CAAf;AACA,WAAO,EAAP,CAAU,OAAV,EAAmB,eAAO;AACxB,UAAI,IAAI,IAAJ,KAAa,YAAjB,EAA+B;AAAE;AAC/B,eAAO,GAAP;AACD;AACF,KAJD;AAKA,WAAO,MAAP,CAAc,IAAd,EAAoB,YAAM;AACxB,cAAQ,OAAO,OAAP,GAAiB,IAAzB;AACD,KAFD;AAGD,GAVM,CAAP;AAWD;;;wEAEc,iBAAO,IAAP;AAAA,QAeT,IAfS,EAkBL,CAlBK;AAAA;AAAA;AAAA;AAAA;;AAEb,gDAAW,IAAX;;AAEA;AACA,gBAAI,CAAC,IAAD,IAAS,iBAAI,IAAJ,KAAa,QAA1B,EAAoC;AAClC,8BAAI,kDAAJ;AACA,kBAAI,GAAJ,CAAQ,2BAAR;AACA,kBAAI,GAAJ,CAAQ,0BAAR;AACD,aAJD,MAIO;AACL;AACA,kBAAI,GAAJ,CAAQ,yBAAM,iBAAI,MAAJ,CAAW,GAAX,IAAkB,GAAxB,CAAR;AACD;;AAED;AACI,gBAfS,GAeF,iBAAI,MAAJ,CAAW,IAfT;;AAAA;AAAA,gBAgBL,aAhBK;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAkBK,OAAO,GAAP,EAAY,IAAZ,CAlBL;;AAAA;AAkBL,aAlBK;;AAmBT,4BAAgB,IAAhB;AACA,yDAA+B,iBAAI,MAAJ,CAAW,EAA1C,SAAgD,CAAhD;AApBS;;AAAA;AAAA;AAAA;;AAuBT,iDAAsB,YAAE,IAAxB;AACA,mBAAO,CAAP;;AAxBS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"serve.js","sourcesContent":["import http from 'http'\nimport Koa from 'koa'\nimport viewer from 'koa-viewer'\nimport serve from 'koa-static'\nimport { log, merge } from '../utils'\nimport error from './serve-error'\nimport cfg from '../config'\n\nconst app = new Koa()\nlet serverStarted = false\n\nfunction listen(app, port) {\n  return new Promise((resolve, reject) => {\n    const server = http.createServer(app.callback())\n    server.on('error', err => {\n      if (err.code === 'EADDRINUSE') { // port in use\n        reject(err)\n      }\n    })\n    server.listen(port, () => {\n      resolve(server.address().port)\n    })\n  })\n}\n\nexport default async (ucfg) => {\n\n  merge(cfg, ucfg)\n\n  // no fbi\n  if (!ucfg || cfg.type === 'normal') {\n    log('This is not a fbi project, serve current folder.')\n    app.use(error())\n    app.use(viewer())\n  } else {\n    // serve static\n    app.use(serve(cfg.static.src || '.'))\n  }\n\n  // find an available port & start the server\n  let port = cfg.server.port\n  while (!serverStarted) {\n    try {\n      let p = await listen(app, port)\n      serverStarted = true\n      log(`Server runing at http://${cfg.server.ip}:${p}`)\n      break\n    } catch (e) {\n      log(`Warning: port '${e.port}' in use, trying to find a available one...`)\n      port = 0\n    }\n  }\n\n}\n"]}