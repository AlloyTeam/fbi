{"version":3,"sources":["../../src/utils/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;wEA6CO,iBAAsB,GAAtB;AAAA,QACD,GADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,IAAI,KAAJ,CAAU,GAAV,CADX;;AAAA;AACD,eADC;AAAA,6CAEE,MAAM,QAAQ,IAAI,GAAJ,CAAR,CAAN,GAA0B,GAF5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,K;;;;;QA1CN,G,GAAA,G;QAIA,G,GAAA,G;QAKA,I,GAAA,I;QAKA,G,GAAA,G;QAMA,K,GAAA,K;QAQA,K,GAAA,K;;AA/BhB;;;;AACA;;;;;;AAEO,SAAS,GAAT,CAAc,GAAd,EAAmB;AACxB,UAAQ,GAAR,CAAY,OAAO,GAAP,KAAe,QAAf,GAA0B,UAAU,GAApC,GAA0C,GAAtD;AACD;;AAEM,SAAS,GAAT,GAAsB;AAAA,oCAAN,IAAM;AAAN,QAAM;AAAA;;AAC3B,MAAM,MAAM,GAAG,KAAH,CAAS,IAAT,CAAc,QAAQ,EAAtB,CAAZ;AACA,SAAO,eAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,CAAC,QAAQ,GAAR,EAAD,EAAgB,MAAhB,CAAuB,GAAvB,CAAtB,CAAP;AACD;;AAEM,SAAS,IAAT,GAAuB;AAAA,qCAAN,IAAM;AAAN,QAAM;AAAA;;AAC5B,MAAM,MAAM,GAAG,KAAH,CAAS,IAAT,CAAc,QAAQ,EAAtB,CAAZ;AACA,SAAO,eAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,GAAtB,CAAP;AACD;;AAEM,SAAS,GAAT,GAAsB;AAC3B,UAAQ,GAAR,CAAY,gBAAgB,SAA5B;;AAD2B,qCAAN,IAAM;AAAN,QAAM;AAAA;;AAE3B,MAAM,MAAM,GAAG,KAAH,CAAS,IAAT,CAAc,QAAQ,EAAtB,CAAZ;AACA,SAAO,eAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,CAAC,SAAD,EAAY,MAAZ,CAAmB,GAAnB,CAAtB,CAAP;AACD;;AAEM,SAAS,KAAT,CAAe,GAAf,EAAoB;AACzB,SAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,iBAAG,MAAH,CAAU,IAAI,GAAJ,CAAV,EAAoB,aAAG,IAAH,GAAU,aAAG,IAAjC,EAAuC,eAAO;AAC5C,aAAO,MAAM,QAAQ,KAAR,CAAN,GAAuB,QAAQ,IAAR,CAA9B;AACD,KAFD;AAGD,GAJM,CAAP;AAKD;;AAEM,SAAS,KAAT,CAAe,MAAf,EAAuB;AAC5B,MAAI,UAAU,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,EAAyB,CAAzB,CAAd;AACA,UAAQ,OAAR,CAAgB,UAAS,MAAT,EAAiB;AAC/B,SAAK,IAAI,CAAT,IAAc,MAAd;AACE,UAAI,sBAAO,OAAO,CAAP,CAAP,MAAqB,QAAzB,EAAmC;AACjC,eAAO,CAAP,IAAY,OAAO,CAAP,MAAc,MAAM,OAAN,CAAc,OAAO,CAAP,CAAd,IAA2B,EAA3B,GAAgC,EAA9C,CAAZ;AACA,cAAM,OAAO,CAAP,CAAN,EAAiB,OAAO,CAAP,CAAjB;AACD,OAHD,MAGO;AACL,eAAO,CAAP,IAAY,OAAO,CAAP,CAAZ;AACD;AANH;AAOD,GARD;AASA,SAAO,MAAP;AACD","file":"index.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\n\nexport function log (msg) {\n  console.log(typeof msg === 'string' ? 'FBI: ' + msg : msg)\n}\n\nexport function cwd(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [process.cwd()].concat(arr))\n}\n\nexport function join(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, arr)\n}\n\nexport function dir(...args) {\n  console.log('__dirname: ' + __dirname)\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [__dirname].concat(arr))\n}\n\nexport function exist(src) {\n  return new Promise((resolve, reject) => {\n    fs.access(cwd(src), fs.R_OK | fs.W_OK, err => {\n      return err ? resolve(false) : resolve(true)\n    })\n  })\n}\n\nexport function merge(target) {\n  var sources = [].slice.call(arguments, 1)\n  sources.forEach(function(source) {\n    for (var p in source)\n      if (typeof source[p] === 'object') {\n        target[p] = target[p] || (Array.isArray(source[p]) ? [] : {})\n        merge(target[p], source[p])\n      } else {\n        target[p] = source[p]\n      }\n  })\n  return target\n}\n\nexport async function isfbi (src) {\n  let ret = await fsp.exist(src)\n  return ret ? require(cwd(src)) : ret\n}"]}