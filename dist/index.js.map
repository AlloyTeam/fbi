{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;IAAY,C;;AAEZ;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAM,WAAW,CACf;AACE,QAAM,KADR;AAEE,SAAO,GAFT;AAGE;AAHF,CADe,EAMf;AACE,QAAM,OADR;AAEE,SAAO,GAFT;AAGE;AAHF,CANe,EAWf;AACE,QAAM,OADR;AAEE,SAAO,GAFT;AAGE;AAHF,CAXe,CAAjB;AALA;;AAHA;;;IA0BM,G;AAEJ,iBAAsB;AAAA;;AACpB,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,MAAL;AACA,SAAK,KAAL,GAAa,EAAb;AACA,SAAK,OAAL,CAAa,QAAb;AACD;;;;wBAEI,K,EAAO;AAAA;;AACV,UAAM,QAAQ,SAAS,KAAK,KAA5B;AACA,UAAI,OAAO,EAAX;AACA,UAAI,eAAe,EAAnB;;AAEA,UAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAK,IAAL,CAAU,KAAV;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;;AATS;AAAA;AAAA;;AAAA;AAAA;AAAA,cAWD,GAXC;;AAYR,gBAAK,KAAL,CAAW,GAAX,CAAe,gBAAQ;AACrB,gBAAI,QAAQ,KAAK,IAAb,IAAqB,QAAQ,KAAK,KAAtC,EAA6C;AAC3C,2BAAa,IAAb,CAAkB,GAAlB;AACA,oBAAK,CAAL,CAAO,GAAP,qBAA4B,KAAK,IAAjC;AACA,mBAAK,EAAL;AACD;AACF,WAND;AAZQ;;AAWV,wDAAgB,IAAhB,4GAAsB;AAAA;AAQrB;AAnBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBV,UAAI,aAAa,KAAK,MAAL,CAAY,YAAZ,EAA0B,MAA1B,CAAiC;AAAA,eAAK,CAAC,KAAK,QAAL,CAAc,CAAd,CAAD,IAAqB,CAAC,aAAa,QAAb,CAAsB,CAAtB,CAA3B;AAAA,OAAjC,CAAjB;AACA,UAAI,WAAW,MAAf,EAAuB;AACrB,aAAK,CAAL,CAAO,GAAP,wBAA+B,UAA/B;AACD;AACF;;;4BAEQ,I,EAAM;AACb,UAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACvB,aAAK,KAAL,GAAa,KAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,CAAb;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACD;AACF;;;;;kBAIY,G;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.js","sourcesContent":["import fs from 'fs'\n// fbi assets\nimport config from './config'\nimport * as _ from './utils'\n// fbi tasks\nimport create from './tasks/create'\nimport serve from './tasks/serve'\nimport build from './tasks/build'\n\nconst defTasks = [\n  {\n    name: 'new',\n    short: 'n',\n    fn: create\n  },\n  {\n    name: 'build',\n    short: 'b',\n    fn: build\n  },\n  {\n    name: 'serve',\n    short: 's',\n    fn: serve\n  }\n]\n\nclass Fbi {\n\n  constructor (...args) {\n    this._ = _\n    this.config = config\n    this.tasks = []\n    this.addTask(defTasks)\n  }\n\n  run (uCmds) {\n    const argvs = uCmds || this.argvs\n    let cmds = []\n    let cmdsExecuted = []\n\n    if (typeof argvs === 'string') {\n      cmds.push(argvs)\n    } else {\n      cmds = argvs\n    }\n\n    for (let cmd of cmds) {\n      this.tasks.map(task => {\n        if (cmd === task.name || cmd === task.short) {\n          cmdsExecuted.push(cmd)\n          this._.log(`Running task '${task.name}'`)\n          task.fn(this)\n        }\n      })\n    }\n\n    let difference = cmds.concat(cmdsExecuted).filter(v => !cmds.includes(v) || !cmdsExecuted.includes(v))\n    if (difference.length) {\n      this._.log(`Error: Commands '${difference}' not found.`)\n    }\n  }\n\n  addTask (task) {\n    if (Array.isArray(task)) {\n      this.tasks = this.tasks.concat(task)\n    } else {\n      this.tasks.push(task)\n    }\n  }\n\n}\n\nexport default Fbi\n\n// constructor(){\n//   (async function() {\n//     console.log('async in')\n//     await _this.mergeCfg()\n//   }())\n//   this.init()\n// }\n\n// static staticMethod () {\n//   return 'static method'\n// }\n"]}