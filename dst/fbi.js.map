{"version":3,"file":null,"sources":["../src/helpers/utils.js","../src/options.js","../src/module.js","../src/task.js","../src/parser.js","../src/helpers/copy.js","../src/template.js","../src/helpers/options.js","../src/cli.js","../src/fbi.js"],"sourcesContent":["import fs from 'fs'\nimport util from 'util'\nimport path from 'path'\nimport { exec } from 'child_process'\n\n// util.inspect.styles\n\n// { special: 'cyan',\n//   number: 'yellow',\n//   boolean: 'yellow',\n//   undefined: 'grey',\n//   null: 'bold',\n//   string: 'green',\n//   date: 'magenta',\n//   regexp: 'red' }\n\n// util.inspect.colors\n\n// { bold: [ 1, 22 ],\n//   italic: [ 3, 23 ],\n//   underline: [ 4, 24 ],\n//   inverse: [ 7, 27 ],\n//   white: [ 37, 39 ],\n//   grey: [ 90, 39 ],\n//   black: [ 30, 39 ],\n//   blue: [ 34, 39 ],\n//   cyan: [ 36, 39 ],\n//   green: [ 32, 39 ],\n//   magenta: [ 35, 39 ],\n//   red: [ 31, 39 ],\n//   yellow: [ 33, 39 ] }\n\nexport function colors() {\n  function colorize(color, text) {\n    const codes = util.inspect.colors[color]\n    return `\\x1b[${codes[0]}m${text}\\x1b[${codes[1]}m`\n  }\n  let returnValue = {}\n  Object.keys(util.inspect.colors).map((color) => {\n    returnValue[color] = (text) => colorize(color, text)\n  })\n  return returnValue\n}\n\n/**\n * type: 0-error, 1-succ\n */\nexport function log(msg, type) {\n  if (typeof msg === 'string') {\n    if (type !== undefined) {\n      msg = type\n        ? colors().grey('FBI => ') + colors().cyan(msg)\n        : colors().grey('FBI Error => ') + colors().magenta(msg)\n    } else {\n      msg = colors().grey('FBI => ') + msg\n    }\n  }\n  console.log(msg)\n}\n\nexport function cwd(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [process.cwd()].concat(arr))\n}\n\nexport function join(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, arr)\n}\n\nexport function dir(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [__dirname, '../'].concat(arr))\n}\n\nexport function merge(target) {\n  var sources = [].slice.call(arguments, 1)\n  sources.forEach(function (source) {\n    for (var p in source)\n      if (typeof source[p] === 'object') {\n        target[p] = target[p] || (Array.isArray(source[p]) ? [] : {})\n        merge(target[p], source[p])\n      } else {\n        target[p] = source[p]\n      }\n  })\n  return target\n}\n\nexport function validJson(data) {\n  try {\n    var o = JSON.parse(data)\n    // JSON.parse(null) returns null, and typeof null === \"object\"\n    if (o && typeof o === 'object') {\n      return o\n    }\n  } catch (e) {\n    return false\n  }\n}\n\nexport function read(_p, charset) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(_p, charset || 'utf8', (err, data) => {\n      return err ? reject(err) : resolve(data)\n    })\n  })\n}\n\nexport function write(file, data) {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, data, (err) => {\n      return err ? reject(err) : resolve(true)\n    })\n  })\n}\n\nexport function exist(_p, opts) {\n  return new Promise((resolve, reject) => {\n    fs.access(_p, opts || (fs.R_OK | fs.W_OK), err => {\n      return err ? resolve(false) : resolve(true)\n    })\n  })\n}\n\nexport function existSync(src) {\n  try {\n    fs.accessSync(src, fs.R_OK | fs.W_OK)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport function install(source, rootPath, command, opts) {\n  const prevDir = process.cwd()\n  let pkgs = ''\n\n  Object.keys(source).map(item => {\n    pkgs += `${item}@${source[item]} `\n  })\n\n  process.chdir(rootPath)\n  const cmd = `${command} install ${pkgs} ${opts ? opts : ''}`\n  log(cmd + '...')\n  log('install dest: ' + rootPath)\n  return new Promise((resolve, reject) => {\n    exec(cmd, (error, stdout, stderr) => {\n      process.chdir(prevDir)\n      if (error) {\n        const msg = stderr.toString()\n        log(msg, 0)\n        return reject(msg)\n      }\n\n      log(stdout)\n      resolve(stdout)\n    })\n  })\n}\n\nexport function copyFile(source, target) {\n  return new Promise((resolve, reject) => {\n    var rd = fs.createReadStream(source)\n    rd.on('error', reject)\n    var wr = fs.createWriteStream(target)\n    wr.on('error', reject)\n    wr.on('finish', resolve)\n    rd.pipe(wr)\n  })\n}\n\nexport function readDir(folder, opts) {\n  return new Promise((resolve, reject) => {\n    fs.readdir(folder, opts, (err, ret) => {\n      return err ? reject(err) : resolve(ret)\n    })\n  })\n}\n\nexport function isNotConfigFile(file) {\n  return file.indexOf('config') < 0\n}\n\nexport function isTask(item) {\n  // return !['-g'].includes(item)\n  return item.indexOf('-') !== 0\n}","export default {\n  data: './data',\n  data_tasks: './data/tasks',\n  data_templates: './data/templates'\n}","import {cwd, dir, join, log, exist} from './helpers/utils'\nimport options from './options'\n\nexport default class Module {\n  constructor(opts) {\n    /**\n     * modules find path:\n     *\n     * 1. current folder ＝> process.cwd()/node_modules\n     * 2. template folder => data/templates/template/node_modules\n     * 3. fbi global folder => data/node_modules\n     * 4. system globale folder => username/node_modules\n     *\n     */\n\n    this.modulePaths = [\n      cwd('node_modules'),\n      dir(options.data, opts.template ? 'templates/' + opts.template : '', 'node_modules'),\n      dir(options.data, 'node_modules')\n      ,\n      '' // global\n    ]\n\n    this.modulePaths = Array.from(new Set(this.modulePaths)) // duplicate removal\n  }\n\n  get(name) {\n    let ret\n\n    for (let item of this.modulePaths) {\n      let _p = join(item, name)\n      try {\n        let found = require.resolve(_p)\n\n        if (found) {\n          ret = item ? item : 'global'\n          break\n        }\n      } catch (e) {\n\n      }\n    }\n\n    return ret\n  }\n\n  getAll() {\n    let modules = {}\n    modules[this.mod] = {}\n    for (let [key, value] of this.modules) {\n      modules[this.mod][key] = value\n    }\n    return modules\n  }\n\n  sync() {\n\n  }\n\n}","import fs from 'fs'\nimport path from 'path'\nimport vm from 'vm'\nimport Module from './module'\nimport {dir, join, cwd, readDir, log, read, exist, isNotConfigFile} from './helpers/utils'\n\nexport default class Task {\n\n  constructor() {\n    this.tasks = {}\n  }\n\n  async get(name, isGlobal) {\n    const _this = this\n    let ret = {\n      cnt: '',\n      type: ''\n    }\n\n    // locals\n    if (!isGlobal) {\n      const u_task_dir = cwd('fbi')\n      let u_exist = await exist(u_task_dir)\n      if (u_exist) {\n        let u_modules = await readDir(u_task_dir)\n        u_modules = u_modules.filter(isNotConfigFile)\n        if (u_modules.length && u_modules.includes(name + '.js')) {\n          ret.cnt = await read(join(u_task_dir, name + '.js'))\n          ret.type = 'local'\n        }\n      }\n    }\n\n    if (!ret.cnt) {\n      // global tasks\n      const t_task_dir = dir('data/tasks/')\n      let t_exist = await exist(t_task_dir)\n      if (t_exist) {\n        const t_modules = await readDir(t_task_dir)\n        if (t_modules.length && t_modules.includes(name)) {\n          ret.cnt = await read(join(t_task_dir, name, 'index.js'))\n          ret.type = 'global'\n        }\n      }\n    }\n\n    return ret\n  }\n\n  async all(justNames) {\n    const _this = this\n    let names = {\n      globals: new Set(),\n      locals: new Set()\n    }\n\n    // global tasks\n    const t_task_dir = dir('data/tasks/')\n    let t_exist = await exist(t_task_dir)\n    if (t_exist) {\n      const t_modules = await readDir(t_task_dir)\n\n      if (justNames) {\n        // names.globals = names.globals.concat(t_modules)\n        names.globals = new Set(t_modules)\n      } else if (t_modules.length) {\n        await Promise.all(t_modules.map(async (item) => {\n          _this.tasks[item] = await read(join(t_task_dir, item, 'index.js'))\n        }))\n      }\n    }\n\n    // locals\n    const u_task_dir = cwd('fbi')\n    let u_exist = await exist(u_task_dir)\n    if (u_exist) {\n      let u_modules = await readDir(u_task_dir)\n      u_modules = u_modules.filter(isNotConfigFile)\n\n      if (justNames) {\n        u_modules.map(item => {\n          item = path.basename(item, '.js')\n          names.locals.add(item)\n          // if (names.globals.has(item)) {\n          //   // names.locals.push(item)\n          // }\n        })\n      } else if (u_modules.length) {\n        await Promise.all(u_modules.map(async (item) => {\n          try {\n            _this.tasks[path.basename(item, '.js')] = await read(join(u_task_dir, item))\n          } catch (e) {\n            log(e)\n          }\n        }))\n      }\n      // names.locals = Array.from(new Set(names.locals)) // duplicate removal\n    }\n    if (justNames) {\n      names.globals = Array.from(names.globals)\n      names.locals = Array.from(names.locals)\n    }\n\n    return justNames ? names : _this.tasks\n  }\n\n  run(name, ctx, task) {\n    let taskCnt = task || this.tasks[name]\n    const module = new Module(ctx.options)\n\n    function requireRelative(mod) {\n\n      // find mod path\n      let mod_path = module.get(mod)\n\n      if (mod_path) {\n        if (mod_path === 'global') {\n          return require(mod) // native or global module\n        } else {\n          return require(join(mod_path, mod))\n        }\n      } else {\n        log(`Module not found: ${mod}, try 'fbi install'`, 0)\n      }\n    }\n\n    let code = `\n    (function(require, ctx) {\n      try {\n        ${taskCnt}\n      } catch (e) {\n        console.log(e)\n      }\n    })`\n\n    vm.runInThisContext(code, {\n      filename: `${name}.js`,\n      lineOffset: -3,\n      displayErrors: true\n    })(requireRelative, ctx)\n  }\n}","import { walk } from 'estree-walker'\nimport acorn from 'acorn'\nimport { merge, log } from './helpers/utils'\n\nexport default class Parser {\n\n  constructor(source, options) {\n    this.dependencies = []\n    this.localDependencies = []\n    this.globalDependencies = []\n    this.options = merge({ sourceType: 'module' }, options || {})\n\n    this.ast = acorn.parse(source, this.options)\n  }\n\n  getDependencies() {\n    walk(this.ast, {\n      enter: (node, parent) => {\n        // import\n        if (node.type === 'ImportDeclaration') {\n          this.dependencies.push(node.source.value)\n        }\n\n        // require\n        if (node.type === 'CallExpression' && node.callee.name === 'require') {\n          this.dependencies.push(node.arguments[0].value)\n        }\n      }\n    })\n\n    return this.dependencies\n  }\n\n  splitDependencies() {\n    if (!this.dependencies.length) {\n      this.getDependencies()\n    }\n\n    this.dependencies.map(item => {\n      if (/^\\.?\\.\\//.test(item)) { // local\n        this.localDependencies.push(item)\n      } else {\n        this.globalDependencies.push(item)\n      }\n    })\n\n    return {\n      locals: this.localDependencies,\n      globals: this.globalDependencies\n    }\n  }\n\n  getLocalDependencies() {\n    if (!this.dependencies.length) {\n      this.splitDependencies()\n    }\n    return this.localDependencies\n  }\n\n  getGlobalDependencies() {\n    if (!this.dependencies.length) {\n      this.splitDependencies()\n    }\n    return this.globalDependencies\n  }\n\n}","import fs from 'fs'\nimport path from 'path'\n\nlet ignore = []\n\nexport default (src, dst, ign) => {\n  ignore = ign ? ign : ignore\n  copy(src, dst, walk)\n}\n\n// src: dir or file\n// dst: dir\nfunction walk(src, dst) {\n  const type = fs.statSync(src)\n\n  if (type.isDirectory()) {\n    return fs.readdirSync(src).filter(f => {\n      if (ignore.includes(f)) {\n        return false\n      } else if (f[0] === '.' && ignore.includes('.')) {\n        return false\n      } else {\n        return true\n      }\n    }).map(f => {\n      let\n        _src = path.join(src, f),\n        _dst = path.join(dst, f),\n        stat = fs.statSync(_src),\n        readable,\n        writable\n\n      if (stat.isDirectory()) {\n        copy(_src, _dst, walk)\n      } else {\n        _copy(_src, _dst)\n      }\n    })\n  } else {\n    return _copy(src, path.join(dst, path.basename(src)))\n  }\n}\n\nfunction _copy(src, dst) {\n  let\n    readable,\n    writable\n\n  readable = fs.createReadStream(src)\n  writable = fs.createWriteStream(dst)\n  readable.pipe(writable)\n\n  let _path = path.relative(process.cwd(), dst)\n  console.log(`copied => ${_path}`)\n}\n\nfunction copy(src, dst, cb) {\n  try {\n    fs.accessSync(dst)\n    cb(src, dst)\n  } catch (e) {\n    fs.mkdirSync(dst)\n    cb(src, dst)\n\n    // fs.mkdir(dst, () => {\n    //   cb(src, dst)\n    // })\n  }\n}","import {cwd, dir, join, log, exist, readDir} from './helpers/utils'\nimport copy from './helpers/copy'\n\nexport default class Template {\n\n  constructor(opts) {\n\n    this.opts = opts\n\n  }\n\n  async copy(name, dst) {\n    if (!name) {\n      return false\n    }\n    let ret = false\n    const src = dir(this.opts.data_templates, name)\n    const has = await exist(src)\n\n    if (has) {\n      // copy\n      copy(src, dst, ['package.json', 'node_modules'])\n      ret = true\n    }\n    log(ret)\n    return ret\n  }\n\n  async all() {\n    let templates = await readDir(dir(this.opts.data_templates))\n    return templates\n  }\n\n}","import {merge} from './utils'\n\nexport const defaultOptions = {\n  // template: 'basic',\n  paths: {\n    data: './data',\n    data_tasks: './data/tasks',\n    data_templates: './data/templates',\n    options: 'fbi/config.js',\n    tasks: 'fbi/tasks.js',\n    starters: '../tmpls/starters/',\n    settings: 'default.config.js'\n  },\n  meta: {\n    src: {\n      root: 'src',\n      html: 'tmpl',\n      css: 'style',\n      js: 'script',\n      img: 'image'\n    },\n    dist: {\n      root: 'dist',\n      html: '.',\n      css: 'css',\n      js: 'js',\n      img: 'img'\n    },\n    archive: 'archive'\n  },\n  server: {\n    host: 'localhost',\n    port: 8888\n  },\n  npm:{\n    alias:'npm',\n    // options:'--save-dev --registry=https://registry.npm.taobao.org'\n    options:'--save-dev'\n  }\n}\n\nexport function getOptions(opts) {\n  return merge(defaultOptions, opts || {})\n}","import Task from './task'\nimport Parser from './parser'\nimport Module from './module'\nimport Template from './template'\nimport options from './options'\nimport { getOptions } from './helpers/options'\nimport { version } from '../package.json'\nimport {\n  cwd, dir, join, exist, existSync, readDir,\n  log, merge, read, write, install, copyFile,\n  isTask, isNotConfigFile} from './helpers/utils'\n\nlet helps =\n  `\n    Usage:\n\n      fbi [command]           run command\n      fbi [task]              run a local preference task\n      fbi [task] -g           run a global task\n      fbi new [template]      init a new template\n      fbi rm [task][template] remove tasks or templates\n\n    Commands:\n\n      -h, --help              output usage information\n      -v, --version           output the version number\n      i, install              install dependencies\n      i -f, install -f        install dependencies force\n`\n\nconst task = new Task()\nconst template = new Template(options)\n\nexport default class Cli {\n\n  constructor(argvs) {\n    this.argvs = argvs\n    this.next = true\n    this.log = log\n    this.options = {}\n    this._ = {\n      cwd, dir, join, exist, existSync, readDir,\n      log, merge, read, write, install, copyFile,\n      isTask, isNotConfigFile\n    }\n\n      ; (async () => {\n        this.version()\n        await this.help()\n        await this.config()\n        await this.create()\n        await this.install()\n        await this.remove()\n        await this.run()\n      })()\n  }\n\n  version() {\n    if (!this.next) return\n\n    if (this.argvs[0] === '-v'\n      || this.argvs[0] === '--verison') {\n      this.next = false\n      console.log(version)\n    }\n  }\n\n  async help() {\n    if (!this.next) return\n\n    if (!this.argvs.length\n      || this.argvs[0] === '-h'\n      || this.argvs[0] === '--help') {\n      this.next = false\n\n      const all = await task.all(true)\n      helps += `\n    Tasks:\n    `\n      if (all.globals.length) {\n        all.globals.map(item => {\n          helps += `\n      ${item} <global>`\n        })\n      }\n      if (all.locals.length) {\n        all.locals.map(item => {\n          helps += `\n      ${item} <local>`\n        })\n      }\n\n      const tmpls = await template.all()\n      if (tmpls.length) {\n        helps += `\n\n    Templates:\n      `\n        tmpls.map(item => {\n          helps += `\n      ${item}`\n        })\n      }\n      helps += `\n      `\n\n      console.log(helps)\n    }\n  }\n\n  async config() {\n    if (!this.next) return\n\n    try {\n      // options\n      const pathConfig = cwd('./fbi/config.js')\n      this.isfbi = await exist(pathConfig)\n      const userOptions = this.isfbi ? require(pathConfig) : null\n      this.options = getOptions(userOptions)\n    } catch (e) {\n      log(e)\n    }\n  }\n\n  async install() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'i' || this.argvs[0] === 'install') {\n      this.next = false\n\n      let force = this.argvs[1] === '-f' || this.argvs[1] === '-force'\n\n      let dependencies = {}\n      let needinstall = {}\n\n      // 1. local dependencies\n      // fbi/config.js => dependencies\n      if (this.options.dependencies\n        && Object.keys(this.options.dependencies).length) {\n        dependencies = this.options.dependencies\n      }\n\n      // 2. dependencies\n      // collect tasks\n      const all = await task.all()\n      let deps = []\n\n      const allTasks = Object.keys(all)\n      if (allTasks.length) {\n        allTasks.map(item => {\n          // get task deps\n          let parser = new Parser(all[item])\n          let dep = parser.getDependencies()\n          deps = deps.concat(dep)\n        })\n      }\n\n      deps = Array.from(new Set(deps)) // duplicate removal\n\n      // merge to dependencies\n      deps.map(item => {\n        if (!dependencies[item]) {\n          dependencies[item] = '*'\n        }\n      })\n\n      if (force) {\n        needinstall = dependencies\n      } else {\n        // find modules\n        const mod = new Module(this.options)\n\n        Object.keys(dependencies).map(item => {\n          let ret = mod.get(item)\n          if (ret) {\n            log(`Found '${item}' at: ${ret}`, 1)\n          } else {\n            log(`Not Fount '${item}'`)\n            needinstall[item] = dependencies[item]\n          }\n        })\n      }\n\n      let targetDir = this.options.template\n        ? dir(this.options.paths.data_templates, this.options.template)\n        : dir(this.options.paths.data)\n\n      if (Object.keys(needinstall).length) {\n        await install(needinstall, targetDir, this.options.npm.alias, this.options.npm.options)\n      } else {\n        log('All Dependencies installed.')\n      }\n    }\n  }\n\n  async create() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'new') {\n      this.next = false\n\n      try {\n        let name = this.argvs[1] ? this.argvs[1].match(/^[^\\\\/:*\"\"<>|,]+$/i) : null\n        name = name.length ? name[0] : null\n        if (name !== null) {\n          let succ = await template.copy(name, cwd())\n          if (succ) {\n            log(`Template '${name}' copied to current folder`, 1)\n          } else {\n            log(`Template '${name}' not found`, 0)\n          }\n        } else {\n          log(`Usage: fbi new [template name]`, 0)\n        }\n      } catch (e) {\n        log(e)\n      }\n    }\n  }\n\n  async remove() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'rm' || this.argvs[0] === 'remove') {\n      this.next = false\n\n      const mods = this.argvs.slice(1)\n      if (!mods.length) {\n        log(`Usage: fbi rm [task] or [template]`)\n        process.exit(1)\n      } else {\n        // for (const mod of mods) {\n        //   if (this.tasks[mod]) {\n        //     if (this.tasks[mod].module.indexOf('.js') > 0) { // fn task\n        //       // del task\n        //       const _path = this._.dir(this.tasks[mod].module.replace('../', ''))\n        //       const exist = this._.existSync(_path)\n        //       if (exist) {\n        //         fs.unlinkSync(_path)\n        //         dbTasks.del(mod)\n        //         log(`Task module '${mod}' removed`, 1)\n        //       } else {\n        //         log(`Task module '${mod}' not found`, 0)\n        //       }\n        //     } else {\n        //       dbTasks.del(mod)\n        //       // TODO: uninstall?\n        //       log(`Task module '${mod}' removed`, 1)\n        //     }\n        //   } else if (this.templates[mod]) {\n        //     // del template\n        //     dbTemplates.del(mod)\n        //     log(`Template '${mod}' removed`, 1)\n        //   } else {\n        //     log(`Module '${mod}' not found`, 0)\n        //   }\n        // }\n      }\n    }\n  }\n\n  async run() {\n    if (!this.next) return\n\n    let cmds = this.argvs\n    if (this.argvs.length > 0) {\n      let isGlobal\n      if (this.argvs[1] === '-g') {\n        isGlobal = true\n      }\n      try {\n        cmds = cmds.filter(isTask)\n        cmds.map(async (cmd) => {\n          const taskObj = await task.get(cmd, isGlobal)\n          if (taskObj.cnt) {\n            log(`Running ${taskObj.type} task '${cmd}'...`, 1)\n            task.run(cmd, this, taskObj.cnt)\n          } else {\n            log(`Task not found: '${cmd}${isGlobal ? ' <global>' : ''}'`, 0)\n          }\n        })\n      } catch (e) {\n        log(`Task function error`, 0)\n        log(e)\n      }\n    }\n  }\n\n}","import Cli from './cli'\nimport Parser from './parser'\n// import Store from './store'\nimport { getOptions } from './helpers/options'\nimport { dir } from './helpers/utils'\n\n// const dbTasks = new Store('tasks')\n// const dbTemplates = new Store('templates')\n\nexport default class Fbi {\n  constructor() {\n    this.options = getOptions()\n\n    // this.tasks = dbTasks.all() || {}\n    // this.templates = dbTemplates.all() || {}\n\n    this.Cli = Cli\n    this.Parser = Parser\n  }\n\n  static get cli() {\n    return Cli\n  }\n\n  run(cmds) {\n    if (!cmds) {\n      return\n    }\n\n    new Fbi.cli(typeof cmds === 'string' ? [cmds] : cmds)\n  }\n\n  // add(mods) {\n  //   if (!mods) {\n  //     return\n  //   }\n\n  //   new Fbi.module(typeof mods === 'string' ? [mods] : mods)\n  // }\n\n  // add anything\n  add2(any, globally) {\n    const tasks_path = dir(this.config.paths.data, 'tasks')\n\n    Object.keys(any).map(a => {\n\n      if (any[a].fn) { // task require a function\n        if (globally) {\n          const name = `${tasks_path}/${a}.js`\n          const cnt = 'module.exports = ' + any[a].fn.toString() // to commonJS\n\n          delete any[a].fn\n          any[a]['module'] = `.${this.config.paths.data}/tasks/${a}.js`\n          // fs.writeFileSync(name, cnt)\n        }\n        this.tasks[a] = any[a]\n      } else if (any[a].module) { // task require a npm module\n        this.tasks[a] = any[a]\n      } else if (typeof any[a] === 'string') { // templates\n        this.templates[a] = any[a]\n      }\n    })\n\n    // sync tasks\n    if (globally) {\n      dbTasks.set(this.tasks)\n    }\n    if (globally) {\n      dbTemplates.set(this.templates)\n    }\n  }\n\n}\n\n"],"names":["babelHelpers.typeof","walk","_copy","_version","_install"],"mappings":"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"}