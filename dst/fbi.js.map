{"version":3,"file":null,"sources":["../src/helpers/utils.js","../src/options.js","../src/module.js","../src/task.js","../src/helpers/copy.js","../src/template.js","../src/helpers/options.js","../src/cli.js","../src/fbi.js"],"sourcesContent":["import fs from 'fs'\nimport util from 'util'\nimport path from 'path'\nimport { exec } from 'child_process'\n\n// util.inspect.styles\n\n// { special: 'cyan',\n//   number: 'yellow',\n//   boolean: 'yellow',\n//   undefined: 'grey',\n//   null: 'bold',\n//   string: 'green',\n//   date: 'magenta',\n//   regexp: 'red' }\n\n// util.inspect.colors\n\n// { bold: [ 1, 22 ],\n//   italic: [ 3, 23 ],\n//   underline: [ 4, 24 ],\n//   inverse: [ 7, 27 ],\n//   white: [ 37, 39 ],\n//   grey: [ 90, 39 ],\n//   black: [ 30, 39 ],\n//   blue: [ 34, 39 ],\n//   cyan: [ 36, 39 ],\n//   green: [ 32, 39 ],\n//   magenta: [ 35, 39 ],\n//   red: [ 31, 39 ],\n//   yellow: [ 33, 39 ] }\n\nexport function colors() {\n  function colorize(color, text) {\n    const codes = util.inspect.colors[color]\n    return `\\x1b[${codes[0]}m${text}\\x1b[${codes[1]}m`\n  }\n  let returnValue = {}\n  Object.keys(util.inspect.colors).map((color) => {\n    returnValue[color] = (text) => colorize(color, text)\n  })\n  return returnValue\n}\n\n/**\n * type: 0-error, 1-succ\n */\nexport function log(msg, type) {\n  if (typeof msg === 'string') {\n    if (type !== undefined) {\n      msg = type\n        ? colors().grey('FBI => ') + colors().cyan(msg)\n        : colors().grey('FBI Error => ') + colors().magenta(msg)\n    } else {\n      msg = colors().grey('FBI => ') + msg\n    }\n  }\n  console.log(msg)\n}\n\nexport function cwd(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [process.cwd()].concat(arr))\n}\n\nexport function join(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, arr)\n}\n\nexport function dir(...args) {\n  const arr = [].slice.call(args || [])\n  return path.join.apply(null, [__dirname, '../'].concat(arr))\n}\n\nexport function merge(target) {\n  var sources = [].slice.call(arguments, 1)\n  sources.forEach(function (source) {\n    for (var p in source)\n      if (typeof source[p] === 'object') {\n        target[p] = target[p] || (Array.isArray(source[p]) ? [] : {})\n        merge(target[p], source[p])\n      } else {\n        target[p] = source[p]\n      }\n  })\n  return target\n}\n\nexport function validJson(data) {\n  try {\n    var o = JSON.parse(data)\n    // JSON.parse(null) returns null, and typeof null === \"object\"\n    if (o && typeof o === 'object') {\n      return o\n    }\n  } catch (e) {\n    return false\n  }\n}\n\nexport function read(_p, charset) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(_p, charset || 'utf8', (err, data) => {\n      return err ? reject(err) : resolve(data)\n    })\n  })\n}\n\nexport function write(file, data) {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, data, (err) => {\n      return err ? reject(err) : resolve(true)\n    })\n  })\n}\n\nexport function exist(_p, opts) {\n  return new Promise((resolve, reject) => {\n    fs.access(_p, opts || (fs.R_OK | fs.W_OK), err => {\n      return err ? resolve(false) : resolve(true)\n    })\n  })\n}\n\nexport function existSync(src) {\n  try {\n    fs.accessSync(src, fs.R_OK | fs.W_OK)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport function install(source, rootPath, command, opts) {\n  const prevDir = process.cwd()\n  let pkgs = ''\n\n  Object.keys(source).map(item => {\n    pkgs += `${item}@${source[item]} `\n  })\n\n  process.chdir(rootPath)\n  const cmd = `${command} install ${pkgs} ${opts ? opts : ''}`\n  log(cmd + '...')\n  log(`install dest: ${rootPath}/node_modules`)\n  return new Promise((resolve, reject) => {\n    exec(cmd, (error, stdout, stderr) => {\n      process.chdir(prevDir)\n      if (error) {\n        const msg = stderr.toString()\n        log(msg, 0)\n        return reject(msg)\n      }\n\n      log(stdout)\n      resolve(stdout)\n    })\n  })\n}\n\nexport function copyFile(source, target) {\n  return new Promise((resolve, reject) => {\n    var rd = fs.createReadStream(source)\n    rd.on('error', reject)\n    var wr = fs.createWriteStream(target)\n    wr.on('error', reject)\n    wr.on('finish', () => {\n      log(`copied ${source} => ${target}`)\n      resolve()\n    })\n    rd.pipe(wr)\n  })\n}\n\nexport function readDir(folder, ignore) {\n  function valid(item){\n    return !ignore.includes(item)\n  }\n  return new Promise((resolve, reject) => {\n    fs.readdir(folder, (err, ret) => {\n      if(err){\n        reject(err)\n      }\n      if(ignore && ignore.length){\n        ret = ret.filter(valid)\n      }\n      resolve(ret)\n    })\n  })\n}\n\nexport function isTaskFile(file) {\n  return path.extname(file) === '.js' && file.indexOf('config') < 0\n}\n\nexport function isTemplate(name) {\n  return path.extname(name) === '' && name.indexOf('.') !== 0\n}\n\nexport function isTaskName(item) {\n  // return !['-g'].includes(item)\n  return item.indexOf('-') !== 0\n}\n\nexport function isAbsolute(str) {\n  return /^(?:\\/|(?:[A-Za-z]:)?[\\\\|\\/])/.test(str);\n}\n\nexport function isRelative(str) {\n  return /^\\.?\\.\\//.test(str);\n}\n\nexport function normalize(str) {\n  return str.replace(/\\\\/g, '/');\n}\n\nexport function basename(src, ext) {\n  return path.basename(src, ext)\n}","export default {\n  data: './data',\n  data_tasks: './data/tasks',\n  data_templates: './data/templates'\n}","import {cwd, dir, join, log, exist, isRelative} from './helpers/utils'\nimport options from './options'\n\nexport default class Module {\n\n  constructor(opts) {\n    /**\n     * modules find path:\n     *\n     * 1. current folder ＝> process.cwd()/node_modules\n     * 2. template folder => data/templates/template/node_modules\n     * 3. fbi global folder => data/node_modules\n     * 4. system globale folder => username/node_modules\n     */\n    this.modulePaths = [cwd('node_modules')]\n    if (opts.template) {\n      this.modulePaths.push(\n        dir(options.data_templates, opts.template, 'node_modules')\n      )\n    }\n    this.modulePaths.push(dir(options.data_tasks, 'node_modules'))\n    this.modulePaths.push('') // global\n\n    this.opts = opts\n  }\n\n  get(name, type) {\n    let ret\n\n    if (isRelative(name)) {\n      // if (type === 'local') {\n      //   ret = cwd(this.opts.paths.tasks)\n      // } else if (type === 'template') {\n      //   ret = dir(options.data_templates, this.opts.template, this.opts.paths.tasks)\n      // }\n\n      // local => template\n      try {\n        const localTasks = cwd(this.opts.paths.tasks)\n        const found = require.resolve(join(localTasks, name))\n        ret = localTasks\n      } catch (e) {\n        log(e)\n        try {\n          const tmplTasks = dir(options.data_templates, this.opts.template, this.opts.paths.tasks)\n          const found = require.resolve(join(tmplTasks, name))\n          ret = tmplTasks\n        } catch (e) {\n\n        }\n      }\n    } else {\n      for (let item of this.modulePaths) {\n        let _p = join(item, name)\n\n        try {\n          let found = require.resolve(_p)\n\n          if (found) {\n            ret = item ? item : 'global'\n            break\n          }\n        } catch (e) {\n\n        }\n      }\n    }\n    return ret\n  }\n}","import vm from 'vm'\nimport Module from './module'\nimport options from './options'\nimport {\n  dir, join, cwd, readDir, log, read, exist,\n  existSync, isTaskFile, basename\n} from './helpers/utils'\n\nexport default class Task {\n\n  constructor() {\n    this.tasks = {}\n  }\n\n  async get(name, type, opts) {\n\n    // if alias, get fullname from alias\n    if (opts.alias && opts.alias[name]) {\n      name = opts.alias[name]\n    }\n\n    // local task > tempalte task => global task\n\n    let ret = {\n      name: name,\n      cnt: '',\n      type: ''\n    }\n\n    // find in local\n    if (type === 'local') {\n      const u_path = cwd(opts.paths.tasks, name + '.js')\n      let u_exist = existSync(u_path)\n      if (u_exist) {\n        ret.cnt = await read(u_path)\n        ret.type = 'local'\n      }\n    }\n\n    // find in template\n    if (!ret.cnt && opts.template && opts.template !== '') {\n      const u_path = dir(options.data_templates, opts.template, opts.paths.tasks, name + '.js')\n      let u_exist = existSync(u_path)\n      if (u_exist) {\n        ret.cnt = await read(u_path)\n        ret.type = 'template'\n      }\n    }\n\n    // find in global\n    if (!ret.cnt || type === 'global') {\n      const u_path = dir(options.data_tasks, name, 'index.js')\n      let u_exist = existSync(u_path)\n      if (u_exist) {\n        ret.cnt = await read(u_path)\n        ret.type = 'global'\n      }\n    }\n\n    return ret\n  }\n\n  async all(opts, justNames, justAvailable) {\n    const _this = this\n    let names = {\n      locals: new Set(),\n      globals: new Set(),\n      template: new Set()\n    }\n\n    // template tasks\n    if (opts.template && opts.template !== '') {\n      const m_task_dir = dir(options.data_templates, opts.template, opts.paths.tasks)\n      let m_exist = await exist(m_task_dir)\n      if (m_exist) {\n        let m_modules = await readDir(m_task_dir)\n        m_modules = m_modules.filter(isTaskFile)\n\n        if (justNames) {\n          m_modules.map(item => {\n            item = basename(item, '.js')\n            names.template.add(item)\n          })\n        } else if (m_modules.length) {\n          await Promise.all(m_modules.map(async (item) => {\n            _this.tasks[basename(item, '.js')] = await read(join(m_task_dir, item))\n          }))\n        }\n      }\n    }\n\n    // global tasks\n    const t_task_dir = dir(options.data_tasks)\n    let t_exist = await exist(t_task_dir)\n    if (t_exist) {\n      const t_modules = await readDir(t_task_dir, ['node_modules', 'package.json'])\n\n      if (justNames) {\n        names.globals = new Set(t_modules)\n      } else if (t_modules.length) {\n        await Promise.all(t_modules.map(async (item) => {\n          _this.tasks[item] = await read(join(t_task_dir, item, 'index.js'))\n        }))\n      }\n    }\n\n    // locals\n    const u_task_dir = cwd('fbi')\n    let u_exist = await exist(u_task_dir)\n    if (u_exist) {\n      let u_modules = await readDir(u_task_dir)\n      u_modules = u_modules.filter(isTaskFile)\n\n      if (justNames) {\n        u_modules.map(item => {\n          item = basename(item, '.js')\n          names.locals.add(item)\n        })\n      } else if (u_modules.length) {\n        await Promise.all(u_modules.map(async (item) => {\n          try {\n            _this.tasks[basename(item, '.js')] = await read(join(u_task_dir, item))\n          } catch (e) {\n            log(e)\n          }\n        }))\n      }\n      // names.locals = Array.from(new Set(names.locals)) // duplicate removal\n    }\n\n    if (justAvailable) {\n      for (let item of names.template.values()) {\n        if (names.locals.has(item)) {\n          names.template.delete(item)\n        }\n      }\n      for (let item of names.globals.values()) {\n        if (names.locals.has(item)) {\n          names.globals.delete(item)\n        }\n        if (names.template.has(item)) {\n          names.globals.delete(item)\n        }\n      }\n    }\n\n    if (justNames) {\n      Object.keys(names).map(item => {\n        names[item] = Array.from(names[item]) // Set => Array\n\n        // alias\n        for (let i = 0, len = names[item].length; i < len; i++) {\n          let alias = ''\n          if (opts.alias) {\n            Object.keys(opts.alias).map(a => {\n              if (opts.alias[a] === names[item][i]) {\n                alias = a\n              }\n            })\n          }\n\n          names[item][i] = {\n            name: names[item][i],\n            alias: alias\n          }\n        }\n      })\n    }\n\n    return justNames ? names : _this.tasks\n  }\n\n  run(name, ctx, taskObj) {\n    let taskCnt = taskObj.cnt || this.tasks[name]\n    const module = new Module(ctx.options)\n\n    function requireResolve(mod) {\n      // find mod path\n      let mod_path = module.get(mod, taskObj.type)\n\n      // if (mod_path) {\n      //   if (mod_path === 'global') {\n      //     return require(mod) // native or global module\n      //   } else {\n      //     return require(join(mod_path, mod))\n      //   }\n      // } else {\n      //   log(`Module not found: ${mod}, try 'fbi install'`, 0)\n      // }\n\n      if (mod_path && mod_path !== 'global') {\n        return require(join(mod_path, mod))\n      } else {\n        return mod ? require(mod) : require\n        // log(`Module not found: ${mod}, try 'fbi install'`, 0)\n      }\n    }\n\n    let code = `\n    (function(require, ctx) {\n      try {\n        ${taskCnt}\n      } catch (e) {\n        console.log(e)\n      }\n    })`\n\n    vm.runInThisContext(code, {\n      filename: `${name}.js`,\n      lineOffset: -3,\n      displayErrors: true\n    })(requireResolve, ctx)\n  }\n}","import fs from 'fs'\nimport path from 'path'\n\nlet ignore = []\n\nexport default (src, dst, ign) => {\n  ignore = ign ? ign : ignore\n  copy(src, dst, walk)\n}\n\n// src: dir or file\n// dst: dir\nfunction walk(src, dst) {\n  const type = fs.statSync(src)\n\n  if (type.isDirectory()) {\n    return fs.readdirSync(src).filter(f => {\n      if (ignore.includes(f)) {\n        return false\n      } else if (f[0] === '.' && ignore.includes('.')) {\n        return false\n      } else {\n        return true\n      }\n    }).map(f => {\n      let\n        _src = path.join(src, f),\n        _dst = path.join(dst, f),\n        stat = fs.statSync(_src),\n        readable,\n        writable\n\n      if (stat.isDirectory()) {\n        copy(_src, _dst, walk)\n      } else {\n        _copy(_src, _dst)\n      }\n    })\n  } else {\n    return _copy(src, path.join(dst, path.basename(src)))\n  }\n}\n\nfunction _copy(src, dst) {\n  let\n    readable,\n    writable\n\n  readable = fs.createReadStream(src)\n  writable = fs.createWriteStream(dst)\n  readable.pipe(writable)\n\n  let _path = path.relative(process.cwd(), dst)\n  console.log(`copied => ${_path}`)\n}\n\nfunction copy(src, dst, cb) {\n  try {\n    fs.accessSync(dst)\n    cb(src, dst)\n  } catch (e) {\n    fs.mkdirSync(dst)\n    cb(src, dst)\n\n    // fs.mkdir(dst, () => {\n    //   cb(src, dst)\n    // })\n  }\n}","import { cwd, dir, join, log, exist,\n  existSync, readDir, isTemplate }\nfrom './helpers/utils'\nimport copy from './helpers/copy'\n\nexport default class Template {\n\n  constructor(opts) {\n\n    this.opts = opts\n\n  }\n\n  async copy(name, dst) {\n    if (!name) {\n      return false\n    }\n    let ret = false\n    const src = dir(this.opts.data_templates, name)\n    const has = existSync(src)\n\n    if (has) {\n      copy(src, dst, ['node_modules', 'dst', 'dist'])\n      return true\n    }\n    return ret\n  }\n\n  async all() {\n    let templates = await readDir(dir(this.opts.data_templates))\n    templates = templates.filter(isTemplate)\n    return templates\n  }\n\n}","import { merge } from './utils'\n\nexport const defaultOptions = {\n  // template: 'basic',\n  paths: {\n    tasks: 'fbi/',\n    options: 'fbi/config.js'\n  },\n  meta: {\n    src: {\n      root: 'src',\n      html: 'tmpl',\n      css: 'style',\n      js: 'script',\n      img: 'image'\n    },\n    dist: {\n      root: 'dist',\n      html: '.',\n      css: 'css',\n      js: 'js',\n      img: 'img'\n    },\n    archive: 'archive'\n  },\n  server: {\n    host: 'localhost',\n    port: 8888\n  },\n  npm:{\n    alias:'npm',\n    // options:'--save-dev --registry=https://registry.npm.taobao.org'\n    options:'--save-dev'\n  }\n}\n\nexport function getOptions(opts) {\n  return merge(defaultOptions, opts || {})\n}","import { createInterface } from 'readline'\nimport Task from './task'\nimport Module from './module'\nimport Template from './template'\nimport options from './options'\nimport copy from './helpers/copy'\nimport { getOptions, defaultOptions } from './helpers/options'\nimport { version } from '../package.json'\nimport {\n  cwd, dir, join, exist, existSync, readDir,\n  log, merge, read, write, install, copyFile,\n  isTaskName, isTaskFile, basename\n} from './helpers/utils'\n\nlet helps =\n  `\n    Usage:\n\n      fbi [command]           run command\n      fbi [task]              run a local preference task\n      fbi [task] -g           run a global task\n      fbi [task] -t           run a template task\n\n    Commands:\n\n      new [template]          init a new template\n      rm [task][template]     remove tasks or templates\n      cat [task][-t, -g]      cat task content\n      ls, list                list all tasks & templates\n      i, install              install dependencies\n      i -f, install -f        install dependencies force\n      add-task                add task files in current folder\n      add-tmpl [name]         add current folder as a template named [name]\n      -h, --help              output usage information\n      -v, --version           output the version number\n`\n\nconst task = new Task()\nconst template = new Template(options)\n\nexport default class Cli {\n\n  constructor(argvs) {\n    this.argvs = argvs\n    this.next = true\n    this.log = log\n    this.options = {}\n    this._ = {\n      cwd, dir, join, exist, existSync, readDir,\n      log, merge, read, write, install, copyFile,\n      isTaskName, isTaskFile\n    }\n\n      ; (async () => {\n        try {\n          this.version()\n          await this.config()\n          await this.help()\n          await this.create()\n          await this.install()\n          await this.remove()\n          await this.cat()\n          await this.list()\n          await this.add()\n          await this.run()\n        } catch (e) {\n          log(e, 0)\n        }\n      })()\n  }\n\n  version() {\n    if (!this.next) return\n\n    if (this.argvs[0] === '-v'\n      || this.argvs[0] === '--verison') {\n      this.next = false\n      console.log(version)\n    }\n  }\n\n  async help() {\n    if (!this.next) return\n\n    if (!this.argvs.length\n      || this.argvs[0] === '-h'\n      || this.argvs[0] === '--help') {\n      this.next = false\n\n      const all = await task.all(this.options, true, true)\n      helps += `\n    Tasks:\n    `\n      if (all.globals.length) {\n        all.globals.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <global>`\n        })\n      }\n\n      if (all.template.length) {\n        all.template.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <template>`\n        })\n      }\n\n      if (all.locals.length) {\n        all.locals.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <local>`\n        })\n      }\n\n      const tmpls = await template.all()\n      if (tmpls.length) {\n        helps += `\n\n    Templates:\n      `\n        tmpls.map(item => {\n          helps += `\n      ${item}`\n        })\n      }\n      helps += `\n      `\n\n      console.log(helps)\n    }\n  }\n\n  async config() {\n    if (!this.next) return\n\n    // user options > tempalte options > default options\n\n    try {\n      // default options\n      this.options = defaultOptions\n\n      // user options\n      const userOptionsPath = cwd(this.options.paths.options)\n      this.isfbi = await exist(userOptionsPath)\n      const userOptions = this.isfbi ? require(userOptionsPath) : null\n\n      // template options\n      if (userOptions && userOptions.template) {\n        this.options['node_modules_path'] = dir(\n          options.data_templates,\n          userOptions.template,\n          'node_modules'\n        )\n\n        const templateOptionsPath = dir(\n          options.data_templates,\n          userOptions.template,\n          this.options.paths.options\n        )\n\n        if (existSync(templateOptionsPath)) {\n          const templateOptions = require(templateOptionsPath)\n          // merge template options\n          this.options = getOptions(templateOptions)\n        }\n      }\n\n      // merge user options\n      this.options = getOptions(userOptions)\n\n    } catch (e) {\n      log(e)\n    }\n  }\n\n  async install() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'i' || this.argvs[0] === 'install') {\n      this.next = false\n\n      let force = this.argvs[1] === '-f' || this.argvs[1] === '-force'\n\n      let localdeps = {}\n      let tmplDeps = {}\n      let taskDeps = {}\n      const opts = this.options\n\n      // local package.json => devDependencies\n      if (await exist(cwd('package.json'))) {\n        localdeps = require(cwd('package.json')).devDependencies\n      }\n\n      // template package.json => devDependencies\n      if (opts.template) {\n        const tmplPkg = dir(options.data_templates, opts.template, 'package.json')\n        const tmplPkg_exist = await exist(tmplPkg)\n        if (tmplPkg_exist) {\n          const tmplPkg_dev = require(tmplPkg)['devDependencies']\n          tmplDeps = merge(tmplPkg_dev, localdeps)\n        }\n        if (Object.keys(tmplDeps).length) {\n          let tmplPkgCnt = require(tmplPkg)\n          tmplPkgCnt['devDependencies'] = tmplDeps\n          await write(tmplPkg, JSON.stringify(tmplPkgCnt, null, 2))\n        }\n      }\n\n      // task package.json => devDependencies\n      else {\n        const taskPkg = dir(options.data_tasks, 'package.json')\n        const taskPkg_exist = await exist(taskPkg)\n        if (taskPkg_exist) {\n          const taskPkg_dev = require(taskPkg).devDependencies\n          taskDeps = merge(taskPkg_dev, localdeps)\n        }\n        if (Object.keys(taskDeps).length) {\n          let taskPkgCnt = require(taskPkg)\n          taskPkgCnt['devDependencies'] = taskDeps\n          await write(taskPkg, JSON.stringify(taskPkgCnt, null, 2))\n        }\n      }\n\n      const npms = opts.npm\n\n      const installTmplDeps = Object.keys(tmplDeps).length\n        ? await install(tmplDeps, dir(options.data_templates, opts.template), npms.alias, npms.options)\n        : Promise.resolve()\n\n      const installTaskDeps = Object.keys(taskDeps).length\n        ? await install(taskDeps, dir(options.data_tasks), npms.alias, npms.options)\n        : Promise.resolve()\n\n      // install\n      Promise.all([installTmplDeps, installTaskDeps]).then(ret => {\n        log('All Dependencies Installed', 1)\n      }).catch(err => {\n        log(err, 0)\n      })\n\n    }\n  }\n\n  async create() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'new') {\n      this.next = false\n\n      if (!this.argvs[1]) {\n        return log(`Usage: fbi new [template name]`, 0)\n      }\n      // log(this.argvs[1].match(/^[^\\\\/:*\"\"<>|,]+$/i))\n      try {\n        const name = this.argvs[1]\n        let succ = await template.copy(name, cwd())\n        if (succ) {\n          log(`Template '${name}' copied to current folder`, 1)\n        } else {\n          log(`Template '${name}' not found`, 0)\n        }\n      } catch (e) {\n        log(e)\n      }\n    }\n  }\n\n  async remove() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'rm' || this.argvs[0] === 'remove') {\n      this.next = false\n\n      const mods = this.argvs.slice(1)\n      if (!mods.length) {\n        log(`Usage: fbi rm [task] or [template]`)\n        process.exit(1)\n      } else {\n        // for (const mod of mods) {\n        //   if (this.tasks[mod]) {\n        //     if (this.tasks[mod].module.indexOf('.js') > 0) { // fn task\n        //       // del task\n        //       const _path = this._.dir(this.tasks[mod].module.replace('../', ''))\n        //       const exist = this._.existSync(_path)\n        //       if (exist) {\n        //         fs.unlinkSync(_path)\n        //         dbTasks.del(mod)\n        //         log(`Task module '${mod}' removed`, 1)\n        //       } else {\n        //         log(`Task module '${mod}' not found`, 0)\n        //       }\n        //     } else {\n        //       dbTasks.del(mod)\n        //       // TODO: uninstall?\n        //       log(`Task module '${mod}' removed`, 1)\n        //     }\n        //   } else if (this.templates[mod]) {\n        //     // del template\n        //     dbTemplates.del(mod)\n        //     log(`Template '${mod}' removed`, 1)\n        //   } else {\n        //     log(`Module '${mod}' not found`, 0)\n        //   }\n        // }\n      }\n    }\n  }\n\n  async cat() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'cat') {\n      this.next = false\n\n      if (!this.argvs[1]) {\n        return log(`Usage: fbi cat [task] [-t, -g]`, 0)\n      }\n\n      const name = this.argvs[1]\n      let type = 'local'\n      if (this.argvs[2] === '-g') {\n        type = 'global'\n      } else if (this.argvs[2] === '-t') {\n        type = 'template'\n      }\n\n      const taskObj = await task.get(name, type, this.options)\n      log(`${taskObj.type} task ${name}'s content:\n\n${taskObj.cnt}\n        `)\n    }\n  }\n\n  async list() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'ls'\n      || this.argvs[0] === 'list') {\n      this.next = false\n\n      let helps = ''\n      const all = await task.all(this.options, true, false)\n      helps += `\n    Tasks:\n    `\n      if (all.globals.length) {\n        all.globals.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <global>`\n        })\n      }\n\n      if (all.template.length) {\n        all.template.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <template>`\n        })\n      }\n\n      if (all.locals.length) {\n        all.locals.map(item => {\n          helps += `\n      ${item.name} ${item.alias} <local>`\n        })\n      }\n\n      const tmpls = await template.all()\n      if (tmpls.length) {\n        helps += `\n\n    Templates:\n      `\n        tmpls.map(item => {\n          helps += `\n      ${item}`\n        })\n      }\n      helps += `\n      `\n\n      console.log(helps)\n    }\n  }\n\n  async add() {\n    if (!this.next) return\n\n    if (this.argvs[0] === 'add-tmpl') {\n      this.next = false\n\n      // add template\n      const name = this.argvs[1] || basename(cwd(), '')\n      const isExist = await exist(dir(options.data_templates, name))\n\n      if (isExist) {\n        log(`tempalte '${name}' already exist, type 'y' to replace, type a name to create a new one`, 0)\n\n        let\n          rl = createInterface(process.stdin, process.stdout),\n          prompts = ['name'],\n          p = 0,\n          data = {}\n\n        let get = function () {\n          rl.setPrompt(prompts[p] + '> ')\n          rl.prompt()\n\n          p++\n        }\n\n        get()\n\n        rl.on('line', (line) => {\n          data[prompts[p - 1]] = line\n\n          if (p === prompts.length) {\n            return rl.close()\n          }\n\n          get()\n        }).on('close', async () => {\n          if (data.name === 'y') {\n            copy(cwd(), dir(options.data_templates, name), ['dst', 'dist'])\n          } else if (data.name === '') {\n            log('name can\\'t be empty')\n          } else {\n            const isExist2 = await exist(dir(options.data_templates, data.name))\n            if (isExist2) {\n              log(`${data.name} already exist too`, 0)\n              process.exit(0)\n            } else {\n              copy(cwd(), dir(options.data_templates, data.name), ['dst', 'dist'])\n            }\n          }\n\n          // process.exit(0) // can't do it right away\n        })\n      } else {\n        copy(cwd(), dir(options.data_templates, name))\n      }\n\n    } else if (this.argvs[0] === 'add-task') {\n      this.next = false\n\n      log(this.argvs)\n\n      if (!this.argvs[1]) {\n        log(`Usage: fbi add-task [*] or [name.js]`)\n      } else {\n        log('y')\n        let ts = this.argvs.slice(1)\n        ts = ts.filter(isTaskFile)\n        if (!ts.length) {\n          log(`no task found.`, 0)\n        } else {\n          ts.map(async (item) => {\n            // TODO: mkdirp\n            await copyFile(cwd(item), dir(options.data_tasks, basename(item, '.js'), 'index.js'))\n            log(`task '${item}' added successfully`, 1)\n          })\n        }\n      }\n    }\n  }\n\n  async run() {\n    if (!this.next) return\n\n    let cmds = this.argvs\n    if (this.argvs.length > 0) {\n      let type = 'local'\n      if (this.argvs[1] === '-g') {\n        type = 'global'\n      } else if (this.argvs[1] === '-t') {\n        type = 'template'\n      }\n      try {\n        cmds = cmds.filter(isTaskName)\n        cmds.map(async (cmd) => {\n          const taskObj = await task.get(cmd, type, this.options)\n          if (taskObj.cnt) {\n            log(`Running ${taskObj.type} task '${taskObj.name}'...`, 1)\n            task.run(cmd, this, taskObj)\n          } else {\n            log(`Task not found: '${cmd}`, 0)\n          }\n        })\n      } catch (e) {\n        log(`Task function error`, 0)\n        log(e)\n      }\n    }\n  }\n\n}","import Cli from './cli'\n\nexport default class Fbi {\n\n  constructor() {\n    this.Cli = Cli\n  }\n\n  static get cli() {\n    return Cli\n  }\n\n  run(cmds) {\n    if (!cmds) {\n      return\n    }\n\n    new Fbi.cli(typeof cmds === 'string' ? [cmds] : cmds)\n  }\n\n}\n\n"],"names":["babelHelpers.typeof","_copy","_version","_install","createInterface"],"mappings":"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"}